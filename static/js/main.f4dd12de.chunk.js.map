{"version":3,"sources":["components/Header.js","components/ErrorModal.js","components/AddTodo.js","components/List.js","components/Lists.js","components/TodoList.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","ErrorModal","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","lib_default","contentLabel","isOpen","message","onAfterOpen","handleAfterOpen","onRequestClose","handleRequestClose","closeTimeoutMS","ariaHideApp","onClick","handleCloseModal","React","Component","AddTodo","_this","state","error","undefined","handleAddTodo","e","preventDefault","newTodo","target","elements","todo","value","replace","length","lists","indexOf","setState","onSubmit","ErrorModal_ErrorModal","index_esm","showForm","type","placeholder","name","List","handleDelete","list","io_index_esm","count","Lists","map","currentList","index","List_List","key","TodoList","addTodo","prevState","handleDeleteTodo","deleteList","filter","console","log","concat","components_Header","components_Lists","AddTodo_AddTodo","TodoListWithPrinter","_this2","TodoList_TodoList","ref","el","componentRef","react_to_print_lib_default","trigger","href","content","Boolean","window","location","hostname","match","ReactDOM","render","components_TodoList","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4dd12de.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => (\n    <div className='header'>\n        <div className='header__title'>\n            <h3> TO DO LIST </h3>\n        </div>\n    </div>\n);\n\nexport default Header;","import React from 'react';\nimport Modal from 'react-modal';\n\nexport default class ErrorModal extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal \n                    className='modal'\n                    contentLabel='Error Message'\n                    isOpen={!!this.props.message}\n                    onAfterOpen={this.handleAfterOpen}\n                    onRequestClose={this.handleRequestClose}\n                    closeTimeoutMS={100}\n                    ariaHideApp={false}\n                >\n                    <div>\n                        <p>{this.props.message}</p>\n                        <button className='button--small' onClick={this.props.handleCloseModal}>Okay</button>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Modal from './ErrorModal';\nimport {FaPlusCircle} from 'react-icons/fa';\n\nexport default class AddTodo extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    state={\n        error: undefined\n    }\n\n    handleAddTodo = (e) => {\n        e.preventDefault();//to prevent the refresh of webpage when submit the form\n        const newTodo = e.target.elements.todo.value;\n        \n        if(!newTodo || !newTodo.replace(/\\s/g, '').length) {\n            this.setState(()=>({error: 'Invalid Input'}));\n        }\n        else if(this.props.lists.indexOf(newTodo) > -1)\n            this.setState(()=>({error: 'Todo already exists'}));\n        else {\n            this.setState(()=>({error: undefined}));\n            this.props.onSubmit(newTodo);\n        }\n\n        e.target.elements.todo.value=''; //reset the form input value after submit\n    }\n    handleCloseModal = () => {\n        this.setState(() => ({error: undefined}));\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <Modal handleCloseModal={this.handleCloseModal} message={this.state.error}/>\n                </div>\n                <div className='add-todo'>\n                    <FaPlusCircle className='button--circle' onClick={this.props.handleAddTodo} />\n                    {\n                    this.props.showForm \n                        &&  \n                        (\n                            <form className='todo' onSubmit={this.handleAddTodo}> \n                                <input className='todo__content' type='text' placeholder='Add a New Todo' name='todo'/>\n                                <button className='button'>Add</button>\n                            </form>\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport { IoIosTrash } from \"react-icons/io\";\n\nexport default class List extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    handleDelete = () => {\n        this.props.handleDelete(this.props.list);//important, a way to delete according to pros content value!!!\n    }\n    render() {\n        return(\n            <div className='list'>\n                <span className='list__delete' onClick={this.handleDelete}><IoIosTrash className='list__delete--trash'/></span>\n                <li className='list__content'><span className='list__content--number'>{this.props.count}</span>{this.props.list}</li>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport List from './List';\n\nconst Lists = (props) => (\n    <div>\n        {props.lists.length === 0 && <h3 className='widget__message'>No Todos</h3>}\n        {props.lists.map((currentList, index)=>(\n            <List key={currentList}list={currentList} count={index+1} handleDelete={props.handleDelete} />\n        ))}\n    </div>\n);\n\nexport default Lists;","import React from 'react';\nimport Header from './Header';\nimport AddTodo from './AddTodo';\nimport Lists from './Lists';\nimport ReactToPrint from \"react-to-print\";\n\nclass TodoList extends React.Component {\n    state = {\n        addTodo: false,\n        lists: ['buy a new pair of shoes', 'buy a baby dinning chair', \"finish styling the react app\", \"meet with a friend at 12pm\"]\n        //lists: []\n    };\n    handleAddTodo = () => {\n        this.setState((prevState)=>({addTodo: !prevState.addTodo}));\n    }\n    handleDeleteTodo = (deleteList) => {\n        //use filter, not map\n        this.setState((prevState) => ({lists: prevState.lists.filter(list => list !== deleteList)}));\n    \n    }\n    onSubmit = (newTodo) => {\n        console.log(\"newTodo: \"+newTodo);\n        this.setState((prevState)=>({lists: prevState.lists.concat([newTodo])}));\n    }\n    render(){\n        return (\n            <div className='container'>\n                <Header />\n                <div className='widget'>\n                    <Lists handleDelete={this.handleDeleteTodo} lists={this.state.lists}/>\n                </div>\n                <AddTodo showForm={this.state.addTodo} handleAddTodo={this.handleAddTodo} lists={this.state.lists} onSubmit={this.onSubmit}/>\n            </div>\n        )\n    }\n}\n\nclass TodoListWithPrinter extends React.Component {\n    render() {\n        return (\n            <div className='todo-printer'>\n                <TodoList ref={el => (this.componentRef = el)}/>\n                <ReactToPrint\n                    trigger = {() => <a className='printer' href=\"#\">Print this list</a>}\n                    content = {() => this.componentRef}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TodoListWithPrinter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css/normalize.css';\nimport './styles/styles.scss';\nimport TodoList from './components/TodoList';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TodoList />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}